- hosts:
  - pgbackrest_instance
  vars:
    env: prod
    pgbackrest_version: 2.34
    cronjobs:
        - command: /usr/bin/rsync -vi  /home/deployer/pgbackrest-deployer/crontab /etc/cron.d/pgbackrest                                              
          name: copy crontab to pgbackrest user 
        - command: /usr/bin/rsync -vi /home/deployer/pgbackrest-deployer/etc-hosts  /etc/hosts                                              
          name: copy hosts file
        - command: /usr/bin/rsync -vi /home/deployer/pgbackrest-deployer/pgbackrest.conf  /etc/pgbackrest/pgbackrest.conf && chown pgbackrest:pgbackrest /etc/pgbackrest/pgbackrest.conf && chmod 640 /etc/pgbackrest/pgbackrest.conf                                              
          name: copy pgbackrest.conf
        - command: /usr/bin/rsync -vi /home/deployer/pgbackrest-deployer/authorized_keys  /home/pgbackrest/.ssh/authorized_keys && chown pgbackrest:pgbackrest /home/pgbackrest/.ssh/authorized_keys && chmod 600 /home/pgbackrest/.ssh/authorized_keys                                              
          name: copy authorized_keys to pgbackrest user
        - command: /usr/bin/rsync -vi /home/deployer/pgbackrest-deployer/known_hosts  /home/pgbackrest/.ssh/known_hosts && chown pgbackrest:pgbackrest /home/pgbackrest/.ssh/known_hosts && chmod 644 /home/pgbackrest/.ssh/known_hosts                                              
          name: copy known_hosts to pgbackrest user
  tasks:
  - name: create pgbackrest user
    ansible.builtin.user:
      name: pgbackrest
      comment: ""
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_bits: 4096
      ssh_key_file: .ssh/id_rsa

  - name: ansible copy ssh public key for pgbackrest user from remote to local.
    ansible.builtin.fetch:
      src: /home/pgbackrest/.ssh/id_rsa.pub
      dest: ../public_keys/pgbackrest-{{ env }}
      flat: yes

  - name: create pgbackrest directories
    ansible.builtin.file:
      path: "{{ item.dest }}"
      mode: "{{item.mode}}"
      state: directory
      owner: pgbackrest
      group: pgbackrest
    with_items:
      - { dest: '/var/log/pgbackrest', mode: '0770'}
      - { dest: '/etc/pgbackrest', mode: '0755'}
      - { dest: '/etc/pgbackrest/conf.d', mode: '0755'}
      - { dest: '/var/lib/pgbackrest', mode: '0750'}

  - name: Make sure psycopg2 is installed
    apt:
      name: python3-psycopg2
      state: present
      
  - name: copy pgbackrest binary to server
    ansible.builtin.copy:
      src: ../binary/pgbackrest-{{pgbackrest_version}}-{{ansible_distribution_version}}
      dest: /usr/bin/pgbackrest
      owner: root
      group: root
      mode: '0755'
  
  - name: Add rsync cron jobs to copy files from confd upload
    ansible.builtin.cron:                                       
      name: "{{ item.name }}"                   
      cron_file: /etc/cron.d/pgbackrest-rsync                
      job: "{{ item.command }}"                 
      user: "root" 
      minute: "*/5"
    with_items: "{{ cronjobs }}"
